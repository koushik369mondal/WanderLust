<% layout("/layouts/boilerplate") %>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Trip Header -->
            <div class="trip-header mb-5 text-center">
                <h1 class="mb-3">
                    <i class="fa-solid fa-plane-departure text-primary me-2"></i>
                    <%= trip.destination %> Trip Details
                </h1>
                <p class="lead text-muted">
                    <%= new Date(trip.startDate).toLocaleDateString() %> - <%= new Date(trip.endDate).toLocaleDateString() %>
                    | <%= trip.travelers %> travelers | <%= trip.budgetType %> budget
                </p>
                <div class="status-badge mb-3">
                    <span class="badge bg-<%= trip.status === 'planned' ? 'primary' : trip.status === 'booked' ? 'success' : 'secondary' %>">
                        <i class="fa-solid fa-circle me-1"></i>
                        <%= trip.status.charAt(0).toUpperCase() + trip.status.slice(1) %>
                    </span>
                </div>
            </div>

            <!-- Offline Download Button -->
            <div class="download-section mb-4 text-center">
                <button id="downloadOfflineBtn" class="btn btn-outline-primary">
                    <i class="fa-solid fa-download me-2"></i>
                    Download for Offline Access
                </button>
                <small class="text-muted d-block mt-2">Save this trip for offline viewing</small>
                <div id="downloadStatus" class="mt-2" style="display: none;"></div>
            </div>

            <!-- Trip Summary Card -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">
                                <i class="fa-solid fa-dollar-sign text-success me-2"></i>
                                Budget Breakdown
                            </h5>
                            <ul class="list-unstyled">
                                <li class="d-flex justify-content-between">
                                    <span>Flights:</span>
                                    <strong>$<%= trip.costs?.flights?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <span>Accommodation:</span>
                                    <strong>$<%= trip.costs?.hotels?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <span>Food:</span>
                                    <strong>$<%= trip.costs?.food?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <span>Activities:</span>
                                    <strong>$<%= trip.costs?.activities?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <span>Transport:</span>
                                    <strong>$<%= trip.costs?.transport?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <li class="d-flex justify-content-between">
                                    <span>Insurance:</span>
                                    <strong>$<%= trip.costs?.insurance?.toLocaleString() || 'N/A' %></strong>
                                </li>
                                <hr>
                                <li class="d-flex justify-content-between fw-bold">
                                    <span>Total:</span>
                                    <strong>$<%= trip.total?.toLocaleString() || 'N/A' %> USD</strong>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">
                                <i class="fa-solid fa-lightbulb text-warning me-2"></i>
                                Recommendations
                            </h5>
                            <ul class="list-unstyled">
                                <% if (trip.recommendations) { %>
                                    <% trip.recommendations.forEach(rec => { %>
                                        <li class="mb-2">
                                            <i class="fa-solid fa-check-circle text-success me-2"></i>
                                            <%= rec %>
                                        </li>
                                    <% }); %>
                                <% } else { %>
                                    <li>No recommendations available</li>
                                <% } %>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Itinerary Section -->
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fa-solid fa-map me-2"></i>
                        Itinerary & Notes
                    </h5>
                </div>
                <div class="card-body">
                    <div id="itineraryContent">
                        <% if (trip.notes && trip.notes.trim()) { %>
                            <p class="trip-notes"><%= trip.notes %></p>
                        <% } else { %>
                            <p class="text-muted">No notes added yet. Add your itinerary details here.</p>
                        <% } %>
                    </div>
                    <div class="mt-3">
                        <textarea id="tripNotes" class="form-control" rows="4" placeholder="Add notes or itinerary details...">
<%= trip.notes || '' %>
                        </textarea>
                        <button id="saveNotesBtn" class="btn btn-primary mt-2">
                            <i class="fa-solid fa-save me-1"></i>
                            Save Notes
                        </button>
                    </div>
                </div>
            </div>

            <!-- Booking Status -->
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fa-solid fa-check-circle me-2"></i>
                        Booking Status
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="booking-item <%= trip.bookingStatus?.flights ? 'booked' : 'pending' %>">
                                <i class="fa-solid fa-plane fa-2x mb-2"></i>
                                <h6>Flights</h6>
                                <span class="badge <%= trip.bookingStatus?.flights ? 'bg-success' : 'bg-warning' %>">
                                    <%= trip.bookingStatus?.flights ? 'Booked' : 'Pending' %>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="booking-item <%= trip.bookingStatus?.hotels ? 'booked' : 'pending' %>">
                                <i class="fa-solid fa-bed fa-2x mb-2"></i>
                                <h6>Hotels</h6>
                                <span class="badge <%= trip.bookingStatus?.hotels ? 'bg-success' : 'bg-warning' %>">
                                    <%= trip.bookingStatus?.hotels ? 'Booked' : 'Pending' %>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="booking-item <%= trip.bookingStatus?.activities ? 'booked' : 'pending' %>">
                                <i class="fa-solid fa-star fa-2x mb-2"></i>
                                <h6>Activities</h6>
                                <span class="badge <%= trip.bookingStatus?.activities ? 'bg-success' : 'bg-warning' %>">
                                    <%= trip.bookingStatus?.activities ? 'Booked' : 'Pending' %>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="text-center">
                <a href="/trip-planner/my-trips" class="btn btn-secondary me-2">
                    <i class="fa-solid fa-arrow-left me-1"></i>
                    Back to My Trips
                </a>
                <button id="shareTripBtn" class="btn btn-outline-primary">
                    <i class="fa-solid fa-share me-1"></i>
                    Share Trip
                </button>
                <button id="deleteTripBtn" class="btn btn-outline-danger ms-2">
                    <i class="fa-solid fa-trash me-1"></i>
                    Delete Trip
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.booking-item {
    text-align: center;
    padding: 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.booking-item.booked {
    background-color: #d4edda;
    border: 1px solid #c3e6cb;
}

.booking-item.pending {
    background-color: #fff3cd;
    border: 1px solid #ffeaa7;
}

.trip-notes {
    background-color: #f8f9fa;
    padding: 1rem;
    border-left: 4px solid #fe424d;
    border-radius: 4px;
}

.status-badge .badge {
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const tripId = '<%= trip._id %>';
    const tripData = <%- JSON.stringify(trip) %>;

    // Download for offline
    document.getElementById('downloadOfflineBtn').addEventListener('click', async () => {
        const btn = document.getElementById('downloadOfflineBtn');
        const status = document.getElementById('downloadStatus');
        
        btn.disabled = true;
        btn.innerHTML = '<i class="fa-solid fa-spinner fa-spin me-2"></i>Downloading...';
        status.style.display = 'block';
        status.innerHTML = '<div class="spinner-border spinner-border-sm me-2" role="status"></div>Preparing offline version...';
        
        try {
            // Use offline manager to cache trip
            if (typeof OfflineManager !== 'undefined') {
                await OfflineManager.cacheTrip(tripId, tripData);
                status.innerHTML = '<i class="fa-solid fa-check text-success me-2"></i>Trip downloaded successfully!';
                btn.innerHTML = '<i class="fa-solid fa-check me-2"></i>Downloaded ✓';
                btn.classList.remove('btn-outline-primary');
                btn.classList.add('btn-success');
            } else {
                throw new Error('Offline manager not loaded');
            }
        } catch (error) {
            console.error('Download error:', error);
            status.innerHTML = '<i class="fa-solid fa-exclamation-triangle text-danger me-2"></i>Download failed: ' + error.message;
            btn.disabled = false;
            btn.innerHTML = '<i class="fa-solid fa-download me-2"></i>Download for Offline Access';
        }
                                <% } %>
                            </div>
                        </div>

                        <!-- Trip Timeline -->
                        <div class="action-card mt-4">
                            <h4 class="action-title">
                                <i class="fa-solid fa-timeline text-primary me-2"></i>
                                Trip Timeline
                            </h4>
                            <div class="timeline">
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-primary"></div>
                                    <div class="timeline-content">
                                        <h6>Planned</h6>
                                        <small><%= new Date(trip.createdAt).toLocaleDateString() %></small>
                                    </div>
                                </div>
                                <% if (trip.status === 'booked' || trip.status === 'completed') { %>
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-info"></div>
                                        <div class="timeline-content">
                                            <h6>Booked</h6>
                                            <small><%= new Date(trip.lastUpdated).toLocaleDateString() %></small>
                                        </div>
                                    </div>
                                <% } %>
                                <% if (trip.status === 'completed') { %>
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-success"></div>
                                        <div class="timeline-content">
                                            <h6>Completed</h6>
                                            <small><%= new Date(trip.lastUpdated).toLocaleDateString() %></small>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.trip-detail-header {
    background: var(--bg-primary-solid);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 2rem;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
}

.trip-meta-badges {
    margin-top: 0.5rem;
}

.trip-detail-card {
    background: var(--bg-primary-solid);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 2rem;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
}

.card-title {
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    font-weight: 600;
}

.overview-item {
    margin-bottom: 1.5rem;
}

.overview-item label {
    font-weight: 600;
    color: var(--text-secondary);
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.overview-item p {
    color: var(--text-primary);
    font-size: 1.1rem;
    margin-bottom: 0;
    font-weight: 500;
}

.total-cost-highlight {
    text-align: center;
    background: linear-gradient(135deg, rgba(254, 66, 77, 0.1), rgba(40, 167, 69, 0.1));
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
}

.cost-amount {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--accent-color);
    margin-bottom: 0.5rem;
}

.cost-label {
    font-size: 1rem;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
}

.per-person {
    font-size: 0.9rem;
    color: var(--text-secondary);
}

.cost-breakdown-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
}

.cost-item {
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
    padding: 1rem;
    transition: all 0.3s ease;
}

.cost-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.cost-icon {
    font-size: 1.5rem;
    margin-right: 1rem;
    width: 40px;
    text-align: center;
}

.cost-details {
    flex: 1;
}

.cost-name {
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.25rem;
}

.cost-value {
    font-size: 1.1rem;
    color: var(--accent-color);
    font-weight: 500;
}

.recommendations-list, .saving-tips-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.recommendation-item, .saving-tip-item {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 0.75rem;
    color: var(--text-primary);
}

.trip-actions-sidebar {
    position: sticky;
    top: 2rem;
}

.action-card {
    background: var(--bg-primary-solid);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 1.5rem;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    border: 1px solid var(--border-color);
}

.action-title {
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 600;
}

.action-buttons .btn {
    margin-bottom: 0.5rem;
}

.notes-content {
    color: var(--text-primary);
    line-height: 1.6;
}

.timeline {
    position: relative;
    padding-left: 2rem;
}

.timeline::before {
    content: '';
    position: absolute;
    left: 1rem;
    top: 0;
    bottom: 0;
    width: 2px;
    background: var(--border-color);
}

.timeline-item {
    position: relative;
    margin-bottom: 1.5rem;
}

.timeline-marker {
    position: absolute;
    left: -2rem;
    top: 0.25rem;
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    border: 3px solid var(--bg-primary-solid);
}

.timeline-content h6 {
    color: var(--text-primary);
    margin-bottom: 0.25rem;
    font-weight: 600;
}

.timeline-content small {
    color: var(--text-secondary);
}

@media (max-width: 768px) {
    .trip-detail-header {
        padding: 1.5rem;
    }

    .trip-detail-card {
        padding: 1.5rem;
    }

    .cost-breakdown-grid {
        grid-template-columns: 1fr;
    }

    .trip-actions-sidebar {
        position: static;
    }
}
</style>

<script>
    // Make trip data available to JavaScript
    window.tripData = <%- JSON.stringify(trip) %>;
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Download for Offline functionality
    document.getElementById('downloadOfflineBtn').addEventListener('click', async function() {
        try {
            if ('serviceWorker' in navigator && 'indexedDB' in window) {
                // Check if offline manager is available
                if (window.OfflineManager) {
                    await window.OfflineManager.saveTripForOffline(window.tripData);
                    showToast('Trip downloaded for offline access!', 'success');
                } else {
                    showToast('Offline functionality not available', 'warning');
                }
            } else {
                showToast('Offline features not supported in this browser', 'warning');
            }
        } catch (error) {
            console.error('Download error:', error);
            showToast('Failed to download trip for offline access', 'error');
        }
    });

    // Update Status
    document.getElementById('updateStatusBtn').addEventListener('click', async function() {
        const tripId = this.dataset.tripId;
        const currentStatus = this.dataset.currentStatus;

        const statusOptions = {
            'planned': 'booked',
            'booked': 'completed',
            'completed': 'planned'
        };

        const newStatus = statusOptions[currentStatus];
        const statusLabels = {
            'planned': 'Planned',
            'booked': 'Booked',
            'completed': 'Completed'
        };

        if (confirm(`Update trip status to "${statusLabels[newStatus]}"?`)) {
            try {
                const response = await fetch(`/trip-planner/${tripId}/status`, {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status: newStatus })
                });

                const result = await response.json();

                if (result.success) {
                    location.reload();
                } else {
                    showToast('Failed to update trip status', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('Failed to update trip status', 'error');
            }
        }
    });

    // Delete Trip
    document.getElementById('deleteTripBtn').addEventListener('click', async function() {
        const tripId = this.dataset.tripId;

        if (confirm('Are you sure you want to delete this trip plan?')) {
            try {
                const response = await fetch(`/trip-planner/${tripId}`, {
                    method: 'DELETE'
                });

                const result = await response.json();

                if (result.success) {
                    window.location.href = '/trip-planner/my-trips';
                } else {
                    showToast('Failed to delete trip', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('Failed to delete trip', 'error');
            }
        }
    });

    // Share Trip
    document.getElementById('shareTripBtn').addEventListener('click', function() {
        const shareText = `Check out my trip plan to ${window.tripData.destination}!\n` +
                         `📅 ${new Date(window.tripData.startDate).toLocaleDateString()} - ${new Date(window.tripData.endDate).toLocaleDateString()}\n` +
                         `💰 Total Cost: $${window.tripData.total.toLocaleString()}\n` +
                         `👥 ${window.tripData.travelers} travelers\n` +
                         `Plan your trip at: ${window.location.origin}/trip-planner`;

        if (navigator.share) {
            navigator.share({
                title: `Trip to ${window.tripData.destination} - WanderLust`,
                text: shareText,
                url: window.location.href
            }).catch(console.error);
        } else {
            navigator.clipboard.writeText(shareText).then(() => {
                showToast('Trip details copied to clipboard!', 'success');
            }).catch(() => {
                showToast('Unable to copy to clipboard', 'warning');
            });
        }
    });

    function showToast(message, type) {
        // Simple toast implementation
        const toast = document.createElement('div');
        toast.className = `alert alert-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'warning'} position-fixed`;
        toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
        toast.innerHTML = `<i class="fa-solid fa-${type === 'success' ? 'check' : type === 'error' ? 'times' : 'exclamation'}-circle me-2"></i>${message}`;
        document.body.appendChild(toast);

        setTimeout(() => {
            toast.remove();
        }, 3000);
    }
});
</script>
