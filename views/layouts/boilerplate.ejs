<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>WanderLust</title>
  <link rel="icon" type="image/x-icon" href="/images/compass.png" />
  <link rel="manifest" href="/manifest.json" />
  <link rel="stylesheet" href="/CSS/style.css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
    integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap"
    rel="stylesheet" />
  <link rel="stylesheet" href="/CSS/rating.css" />
  <link rel="stylesheet" href="/CSS/loading.css" />
  <link rel="stylesheet" href="/CSS/packingList.css" />
  <link href="https://api.mapbox.com/mapbox-gl-js/v3.11.0/mapbox-gl.css" rel="stylesheet" />
  <script src="https://api.mapbox.com/mapbox-gl-js/v3.11.0/mapbox-gl.js"></script>
</head>

<body>
  <!-- Loading Spinner Component -->
  <div id="global-loading" class="loading-overlay" style="display: none;">
    <div class="loading-spinner"></div>
  </div>
  
  <canvas id="fluid-cursor"></canvas>

  <%- include("../includes/navbar.ejs") %>

    <div class="container">
      <%- include("../includes/flash.ejs") %> <%- body %>
    </div>

    <%- include("../includes/footer.ejs") %>
    <%- include("../includes/chatbot.ejs") %>


      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
      <script src="/JS/script.js"></script>
      <script src="/JS/loading.js"></script>
      <script>
        const canvas = document.getElementById("fluid-cursor");
        const ctx = canvas.getContext("2d");

        let width = (canvas.width = window.innerWidth);
        let height = (canvas.height = window.innerHeight);

        const particles = [];

        class Particle {
          constructor(x, y) {
            this.x = x;
            this.y = y;
            this.size = Math.random() * 4 + 2;
            this.speedX = (Math.random() - 0.5) * 3;
            this.speedY = (Math.random() - 0.5) * 3;
            this.hue = Math.random() * 360;
            this.alpha = 1;
          }
          update() {
            this.x += this.speedX;
            this.y += this.speedY;
            this.alpha -= 0.02;
          }
          draw() {
            ctx.beginPath();
            ctx.fillStyle = `hsla(${this.hue}, 100%, 60%, ${this.alpha})`;
            ctx.shadowBlur = 20;
            ctx.shadowColor = `hsl(${this.hue}, 100%, 60%)`;
            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
            ctx.fill();
          }
        }

        function handleParticles() {
          for (let i = 0; i < particles.length; i++) {
            particles[i].update();
            particles[i].draw();

            if (particles[i].alpha <= 0) {
              particles.splice(i, 1);
              i--;
            }
          }
        }

        function animate() {
          ctx.clearRect(0, 0, width, height);
          handleParticles();
          requestAnimationFrame(animate);
        }

        animate();

        window.addEventListener("resize", () => {
          width = canvas.width = window.innerWidth;
          height = canvas.height = window.innerHeight;
        });

        // document.addEventListener("mousemove", (e) => {
        //   for (let i = 0; i < 5; i++) {
        //     particles.push(new Particle(e.clientX, e.clientY));
        //   }
        // });
      </script>

      <!-- Service Worker Registration -->
      <script>
        if ('serviceWorker' in navigator) {
          window.addEventListener('load', () => {
            navigator.serviceWorker.register('/sw.js')
              .then((registration) => {
                console.log('Service Worker registered successfully:', registration.scope);
                
                // Register for background sync if supported
                if ('serviceWorker' in navigator && 'SyncManager' in window) {
                  registration.sync.register('sync-trips')
                    .then(() => console.log('Background sync registered'))
                    .catch((error) => console.log('Background sync registration failed:', error));
                }
              })
              .catch((error) => {
                console.log('Service Worker registration failed:', error);
              });
          });
        }

        // Listen for sync completion messages from SW
        if ('serviceWorker' in navigator) {
          navigator.serviceWorker.addEventListener('message', (event) => {
            if (event.data.type === 'SYNC_REQUEST') {
              console.log('Sync request received:', event.data.message);
              // Update UI if needed
              if (window.showToast) {
                showToast('Syncing offline changes...', 'info');
              }
            }
          });
        }
      </script>
      <div id="cursor-glow"></div>
      <div id="page-glow" class="page-glow"></div>

</body>

</html>